steps:
  - name: lint
    image: golangci/golangci-lint:v2.1.5
    commands:
      - golangci-lint run --no-config -v --timeout 10m ./...
    backend_options:
      kubernetes:
        resources:
          requests:
              cpu: 10m
              memory: 1Gi
          limits:
            cpu: 2
            memory: 1Gi

  - name: postgres-healthcheck
    image: postgres:17.4
    commands:
      - while ! pg_isready -h database -U postgres; do sleep 1; done

  - name: test
    image: golang:1.24
    commands:
      - go run github.com/rubenv/sql-migrate/sql-migrate@v1.7.0 up -env production
      - go test -coverprofile cover.out -v ./...
      - go tool cover -func cover.out
    environment:
      APP_DSN: postgres://postgres:secret@database/testdb?sslmode=disable
      GOPROXY:
        from_secret: goproxy_url
    backend_options:
      kubernetes:
        resources:
          requests:
              cpu: 10m
              memory: 1Gi
          limits:
            cpu: 2
            memory: 1Gi

  - name: build
    image: woodpeckerci/plugin-docker-buildx:5.2.2
    settings:
      repo: registry.megpoid.dev/codestation/goapp
      tags: latest
      registry: registry.megpoid.dev
      config:
        from_secret: registry_credentials
      build_args:
        CI_COMMIT_TAG: "${CI_COMMIT_TAG}"
      build_args_from_env:
        goproxy:
          from_secret: goproxy_url
    backend_options:
      kubernetes:
        resources:
          requests:
            cpu: 10m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 1Gi

services:
  - name: database
    image: postgres:17.4
    ports:
      - 5432
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

when:
  - event:
      - push
      - manual
    branch:
      - master
      - testing
