---
kind: pipeline
name: default
type: kubernetes

platform:
  os: linux
  arch: arm64

steps:
  - name: lint
    image: golangci/golangci-lint:v1.61.0
    commands:
     - golangci-lint run --no-config -v --timeout 10m ./...
    resources:
      limits:
        cpu: 2000
        memory: 1Gi

  - name: postgres-healthcheck
    image: postgres:16
    commands:
      - while ! pg_isready -h database -U postgres; do sleep 1; done

  - name: test
    image: golang:1.23
    commands:
      - go run github.com/rubenv/sql-migrate/sql-migrate@v1.7.0 up -env production
      - go test -coverprofile cover.out -v ./...
      - go tool cover -func cover.out
    environment:
      APP_DSN: postgres://postgres:secret@database/testdb
      GOPROXY:
        from_secret: goproxy_url
    resources:
      limits:
        cpu: 2000
        memory: 1Gi

  - name: build
    image: ghcr.io/codestation/drone-kaniko
    settings:
      repo: registry.megpoid.dev/codestation/goapp
      tags: latest
      registry: registry.megpoid.dev
      config:
        from_secret: registry_credentials
      build_args:
        - CI_COMMIT_TAG=${DRONE_TAG}
      build_args_from_env:
        - goproxy
    environment:
      goproxy:
        from_secret: goproxy_url
    resources:
      limits:
        cpu: 2000
        memory: 1Gi

    when:
      event:
        - push
        - tag

services:
  - name: database
    image: postgres:16
    environment:
      POSTGRES_DB: testdb
      POSTGRES_PASSWORD: secret
    tmpfs:
      - /var/lib/postgresql/data

trigger:
  branch:
    - master
    - testing
