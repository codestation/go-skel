// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Hvm3+Xxu0b07/hUAAP//e9me80AdAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
