// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"+6phOst/XS6XSO7D6d8BAAD//yCUS28TIgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
