// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//wtVc6geHQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
