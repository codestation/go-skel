// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
